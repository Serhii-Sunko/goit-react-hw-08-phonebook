{"version":3,"file":"static/js/101.1cf8c809.chunk.js","mappings":"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","sources":["../node_modules/react-icons/lib/esm/iconsManifest.js","../node_modules/react-icons/lib/esm/iconContext.js","../node_modules/react-icons/lib/esm/iconBase.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"fa6\",\n    \"name\": \"Font Awesome 6\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"pi\",\n    \"name\": \"Phosphor Icons\",\n    \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"lia\",\n    \"name\": \"Icons8 Line Awesome\",\n    \"projectUrl\": \"https://icons8.com/line-awesome\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","React","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","_superPropBase","object","property","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","value","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","_classCallCheck","order","scheduled","_createClass","process","add","push","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}